// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  email    String     @unique
  name     String?
  books    UserBook[]  // This establishes the relationship with the UserBook model
}

model UserBook {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  olid       String   // Open Library ID (unique identifier from Open Library)
  title      String
  author     String
  publishedAt DateTime?
  thumbnail  String?  // Book cover image
  description String? // Book description

  format     String   // Hardcover, Paperback, eBook, etc.
  borrowed   Boolean  @default(false) // If the user borrowed it
  onLoan     Boolean  @default(false) // If the user lent it out
  status     Status   @default(WANT_TO_READ)
  currentPage Int?    // Reading progress

  dateAdded  DateTime @default(now()) // When the book was added
  dateStarted DateTime? // When the user started reading the book
  dateFinished DateTime? // When the user finished reading the book

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Status {
  WANT_TO_READ
  READING
  READ
}
